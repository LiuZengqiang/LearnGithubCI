name: Convert Modified Markdown to LaTeX

on:
  push:
    paths:
      - "*.md"  # 仅当主目录下的 .md 文件变更时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  convert:
    runs-on: ubuntu-latest
    container: pandoc/latex:latest-ubuntu
    steps:
      - name: Install Git
        run: |
          apt-get update
          apt-get install -y git
          apt-get install -y texlive-full

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # 禁用默认身份验证，手动使用 GITHUB_TOKEN

      # # 安装 Pandoc
      # - name: Install Pandoc
      #   run: sudo apt-get update && sudo apt-get install -y pandoc
      
      # # 安装 LaTeX
      # - name: Install LaTeX
      #   run: sudo apt-get install -y texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

      - name: Detect modified .md files
        id: changed-files
        run: |
          git config --global --add safe.directory /__w/LearnGithubCI/LearnGithubCI
          git fetch --unshallow
          git log --oneline
          MODIFIED_FILES=$(git diff --name-only HEAD~1 HEAD -- "*.tex")  # 获取所有修改的 .md 文件
          if [[ -z "$MODIFIED_FILES" ]]; then
            echo "No modified .md files."
            echo "modified=0" >> $GITHUB_ENV  # 记录环境变量，避免后续步骤执行
          else
            echo "Detected modified files: $MODIFIED_FILES"
            echo "$MODIFIED_FILES" > changed_files.txt  # 保存到文件，供后续步骤使用
            echo "modified=1" >> $GITHUB_ENV  # 记录环境变量
          fi

      - name: Convert Markdown to LaTeX
        if: env.modified == '1'  # 仅当有修改时执行
        run: |
          while IFS= read -r file; do
            output_file="${file%.md}.pdf"  # 将 .md 后缀改为 .pdf
            xelatex 2.tex -o 2.pdf
            echo "Converted $file -> $output_file"
          done < changed_files.txt

      - name: Commit and push changes
        if: env.modified == '1'  # 仅当有修改时执行
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git add *.pdf
          git commit -m "Auto-generated .pdf files from modified .md files" || echo "No changes to commit"
          git push origin main
